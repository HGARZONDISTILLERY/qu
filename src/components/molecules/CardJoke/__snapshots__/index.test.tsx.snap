// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CardJoke component renders correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="MuiPaper-root MuiPaper-outlined MuiPaper-rounded MuiCard-root css-1bbq0xd-MuiPaper-root-MuiCard-root"
      >
        <div
          class="joke-list-content MuiBox-root css-s6ydel"
        >
          <div
            class="MuiCardContent-root css-46bh2p-MuiCardContent-root"
          >
            <p
              class="MuiTypography-root MuiTypography-body1 MuiTypography-gutterBottom css-16m3jxf-MuiTypography-root"
            >
              Why do C# and Java developers keep breaking their keyboards?
            </p>
            <h5
              class="MuiTypography-root MuiTypography-h5 css-ag7rrr-MuiTypography-root"
            >
              Because they use a strongly typed language.
            </h5>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="MuiPaper-root MuiPaper-outlined MuiPaper-rounded MuiCard-root css-1bbq0xd-MuiPaper-root-MuiCard-root"
    >
      <div
        class="joke-list-content MuiBox-root css-s6ydel"
      >
        <div
          class="MuiCardContent-root css-46bh2p-MuiCardContent-root"
        >
          <p
            class="MuiTypography-root MuiTypography-body1 MuiTypography-gutterBottom css-16m3jxf-MuiTypography-root"
          >
            Why do C# and Java developers keep breaking their keyboards?
          </p>
          <h5
            class="MuiTypography-root MuiTypography-h5 css-ag7rrr-MuiTypography-root"
          >
            Because they use a strongly typed language.
          </h5>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
